#!/usr/bin/env sh
usage() {
    welcome
    echo
    echo "Usage: cube [-level|-l <level>] [-tips|-t]"
    echo "Options:"
    echo "    -level, -l - Choose level. (levels: 0, 1) (default: 0)"
    echo "    -tips, -t  - Show the game tips."
}

answer="00000000"
cube="00000000"
proj=""

steps=0
start_time=0
over=false

show_tips=false
level=0

set_level() {
    case $level in
    1)
    answer="11001100"
    cube="10100100"
    ;;
    *)
    answer="10001000"
    cube="00000001"
    ;;
    esac
}

ec() {
    # echo cut
    # $1: string
    # $2: position
    echo $1 | cut -c$2
}

show_board() {
    or() {
        # $1: 1st number
        # $2: 2nd number
        expr $1 "|" $2
    }
    proj=''
    proj+=$(or $(ec $cube 1) $(ec $cube 3))
    proj+=$(or $(ec $cube 2) $(ec $cube 4))
    proj+=$(or $(ec $cube 5) $(ec $cube 7))
    proj+=$(or $(ec $cube 6) $(ec $cube 8))
    proj+=$(or $(ec $cube 1) $(ec $cube 2))
    proj+=$(or $(ec $cube 3) $(ec $cube 4))
    proj+=$(or $(ec $cube 5) $(ec $cube 6))
    proj+=$(or $(ec $cube 7) $(ec $cube 8))

    echo
    echo "  $(ec $answer "1-2")               "
    echo " $(ec $answer "3-4") $(ec $proj "1-2")             "
    echo "   $(ec $proj "3-4") a            "
    echo "     b  $(ec $cube "1-2")    $(ec $proj 5)$(ec $answer 5)   "
    echo "       $(ec $cube "5-6") $(ec $cube "3-4") $(ec $proj 7)$(ec $answer 7) $(ec $proj 6)$(ec $answer 6) "
    echo "      c  $(ec $cube "7-8")    $(ec $proj 8)$(ec $answer 8)  "
    echo "        d  ef      "
    echo
}

get_input() {
    read_input() {
        echo "Input: \c"
        read inp
    }

    read_input
    err_count=0
    while test -z "$(ec $inp 1 | grep -Ex '[abcdef]')" || test -z "$(ec $inp "2-4" | grep -Ex "cw|ccw")"; do
    err_count=$(expr $err_count + 1)
    echo "Unrecognized input: $inp"
    case $err_count in
    1)
    echo "We can choose a layer and rotate it either clockwise (cw) or counterclockwise (ccw)."
    echo 'For example, we choose layer `a` and rotate it clockwise, the input is `acw`.'
    ;;
    2)
    echo '` (Backtick) is not part of the input.'
    ;;
    3)
    echo "We can hit <ctrl-c> to exit."
    ;;
    *)
    echo "Too much errors."
    exit 1
    ;;
    esac
    read_input
    done

    layer=$(ec $inp 1)
    is_cw() {
        test $(ec $inp "2-4") = cw
    }

    if test $layer = a; then
    if is_cw; then
    cube=$(ec $cube 3)$(ec $cube 1)$(ec $cube 4)$(ec $cube 2)$(ec $cube '5-8')
    else
    cube=$(ec $cube 2)$(ec $cube 4)$(ec $cube 1)$(ec $cube 3)$(ec $cube '5-8')
    fi
    elif test $layer = b; then
    if is_cw; then
    cube=$(ec $cube "1-4")$(ec $cube 7)$(ec $cube 5)$(ec $cube 8)$(ec $cube 6)
    else
    cube=$(ec $cube "1-4")$(ec $cube 6)$(ec $cube 8)$(ec $cube 5)$(ec $cube 7)
    fi
    elif test $layer = c; then
    if is_cw; then
    cube=$(ec $cube 5)$(ec $cube 1)$(ec $cube "3-4")$(ec $cube 6)$(ec $cube 2)$(ec $cube "7-8")
    else
    cube=$(ec $cube 2)$(ec $cube 6)$(ec $cube "3-4")$(ec $cube 1)$(ec $cube 5)$(ec $cube "7-8")
    fi
    elif test $layer = d; then
    if is_cw; then
    cube=$(ec $cube "1-2")$(ec $cube 7)$(ec $cube 3)$(ec $cube "5-6")$(ec $cube 8)$(ec $cube 4)
    else
    cube=$(ec $cube "1-2")$(ec $cube 4)$(ec $cube 8)$(ec $cube "5-6")$(ec $cube 3)$(ec $cube 7)
    fi
    elif test $layer = e; then
    if is_cw; then
    cube=$(ec $cube 5)$(ec $cube 2)$(ec $cube 1)$(ec $cube 4)$(ec $cube 7)$(ec $cube 6)$(ec $cube 3)$(ec $cube 8)
    else
    cube=$(ec $cube 3)$(ec $cube 2)$(ec $cube 7)$(ec $cube 4)$(ec $cube 1)$(ec $cube 6)$(ec $cube 5)$(ec $cube 8)
    fi
    elif test $layer = f; then
    if is_cw; then
    cube=$(ec $cube 1)$(ec $cube 6)$(ec $cube 3)$(ec $cube 2)$(ec $cube 5)$(ec $cube 8)$(ec $cube 7)$(ec $cube 4)
    else
    cube=$(ec $cube 1)$(ec $cube 4)$(ec $cube 3)$(ec $cube 8)$(ec $cube 5)$(ec $cube 2)$(ec $cube 7)$(ec $cube 6)
    fi
    fi

    steps=$(expr $steps + 1)
}

check_state() {
    if test $proj = $answer; then
    over=true
    fi
}

any_key() {
    echo "Continue...\c"
    read
}

welcome() {
    echo "Cube: Match The Projection of The Cube."
    echo "Idea comes from one of the little games in Star Rail."
}

tips() {
    echo "----"
    echo "Tips:"
    echo
    echo "We have a cube consists of 8 blocks:"
    echo "  00   "
    echo " 00 00 "
    echo "   00  "
    any_key
    echo
    echo "We can mark each layer with a character:"
    echo "   a      "
    echo "  b 00    "
    echo "   00 00  "
    echo "  c  00   "
    echo "    d  ef "
    any_key
    echo
    echo "Each layer is:"
    echo "|----------|----------|----------|"
    echo "|   a      |          |          |"
    echo "|    00    |  b       |    00    |"
    echo "|      00  |   00     |   00     |"
    echo "|          |     00   |  c       |"
    echo "|          |          |          |"
    echo "|----------|----------|----------|"
    echo "|          |          |          |"
    echo "|          |    0     |     0    |"
    echo "|      00  |   0  0   |    0  0  |"
    echo "|     00   |     0    |      0   |"
    echo "|    d     |       e  |        f |"
    echo "|----------|----------|----------|"
    any_key
    echo
    echo "We can choose a layer and rotate it either clockwise (cw) or counterclockwise (ccw)."
    echo 'For example, we choose layer `a` and rotate it clockwise, the input is `acw`.'
    echo "   a                 a      "
    echo '  b 10     `acw`    b 01    '
    echo "   00 00  ------->   00 00  "
    echo "  c  00             c  00   "
    echo "    d  ef             d  ef "
    any_key
    echo
    echo "We also have two *eventual* projections, to the back and right surfaces of the cube:"
    echo "  00               "
    echo " 00                "
    echo "      a            "
    echo "     b  00     0   "
    echo "       00 00  0  0 "
    echo "      c  00     0  "
    echo "        d  ef      "
    any_key
    echo
    echo "The *current* projection is also displayed for our convince:"
    echo "  00               "
    echo " 00 00             "
    echo "   00 a            "
    echo "     b  00    00   "
    echo "       00 00 00 00 "
    echo "      c  00    00  "
    echo "        d  ef      "
    any_key
    echo
    echo "Our goal is to match the cube with its *eventual* projection."
    any_key
    echo "----"
}

case $1 in
-h|-help|--help)
usage
exit
;;
esac

while test $# -gt 0; do
case $1 in
-l|-level)
level=$2
shift
;;
-t|-tips)
show_tips=true
;;
*)
echo "Unknown option: $1"
usage
exit 1
;;
esac
shift
done

welcome
any_key
$show_tips && tips
echo
echo "Game Start."
any_key

set_level
start_time=$(date +%s)
show_board
while ! $over; do
get_input
show_board
check_state
done

echo "Passed."
echo "Steps: $steps"
echo "Time: $(expr $(date +%s) - $start_time)s"
