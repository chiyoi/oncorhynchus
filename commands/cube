#!/usr/bin/env sh
usage() {
    welcome
    echo
    echo "Usage: cube [-level|-l <level>] [-tips|-t]"
    echo "Options:"
    echo "    -level, -l - Choose level. (default: 0)"
    echo "    -tips, -t  - Show the game tips."
}

answer="00000000"
cube="00000000"
proj=""

steps=0
start_time=0
over=false

show_tips=false
level=0

set_level() {
    case $level in
    1)
    answer="11001100"
    cube="10100100"
    ;;
    *)
    answer="10001000"
    cube="00000001"
    ;;
    esac
}

show_board() {
    cuc() {
        # cut cube
        # $1: position
        echo $cube | cut -c$1
    }
    
    cup() {
        # cut proj
        # $1: position
        echo $answer | cut -c$1
    }
    
    bit_or() {
        # $1: arg1
        # $2: arg2
        expr $1 '|' $2
    }

    proj=''
    proj+=$(bit_or $(cuc 1) $(cuc 3))
    proj+=$(bit_or $(cuc 2) $(cuc 4))
    proj+=$(bit_or $(cuc 5) $(cuc 7))
    proj+=$(bit_or $(cuc 6) $(cuc 8))
    proj+=$(bit_or $(cuc 1) $(cuc 2))
    proj+=$(bit_or $(cuc 3) $(cuc 4))
    proj+=$(bit_or $(cuc 5) $(cuc 6))
    proj+=$(bit_or $(cuc 7) $(cuc 8))

    echo
    echo "  $(cup '1-2')            "
    echo " $(cup '3-4')  a          "
    echo "    b $(cuc '1-2')    $(cup 5)   "
    echo "     $(cuc '5-6') $(cuc '3-4') $(cuc 7)  $(cup 6) "
    echo "    c  $(cuc '7-8')    $(cup 8)  "
    echo "      d  ef   "
    echo
}

get_input() {
    read_input() {
        echo "Input: \c"
        read inp
    }

    read_input
    err_count=0
    while test -z "$(echo $inp | cut -c1 | grep -Ex '[abcdef]')" || test -z "$(echo $inp | cut -c2-4 | grep -Ex 'cw|ccw')"; do
    echo "Invalid input."
    err_count=$(expr $err_count + 1)
    if test $err_count -gt 3; then
    echo "Too many errors."
    exit 1
    fi
    read_input
    done

    layer=$(echo $inp | cut -c1)
    dir=$(echo $inp | cut -c2-4)

    cuc() {
        # cut cube
        # $1: position
        echo $cube | cut -c$1
    }
    
    is_cw() {
        test $dir = cw
    }

    if test $layer = a; then
    if is_cw; then
    cube=$(cuc 3)$(cuc 1)$(cuc 4)$(cuc 2)$(cuc '5-8')
    else
    cube=$(cuc 2)$(cuc 4)$(cuc 1)$(cuc 3)$(cuc '5-8')
    fi
    elif test $layer = b; then
    if is_cw; then
    cube=$(cuc '1-4')$(cuc 7)$(cuc 5)$(cuc 8)$(cuc 6)
    else
    cube=$(cuc '1-4')$(cuc 6)$(cuc 8)$(cuc 5)$(cuc 7)
    fi
    elif test $layer = c; then
    if is_cw; then
    cube=$(cuc 5)$(cuc 1)$(cuc '3-4')$(cuc 6)$(cuc 2)$(cuc '7-8')
    else
    cube=$(cuc 2)$(cuc 6)$(cuc '3-4')$(cuc 1)$(cuc 5)$(cuc '7-8')
    fi
    elif test $layer = d; then
    if is_cw; then
    cube=$(cuc '1-2')$(cuc 7)$(cuc 3)$(cuc '5-6')$(cuc 8)$(cuc 4)
    else
    cube=$(cuc '1-2')$(cuc 4)$(cuc 8)$(cuc '5-6')$(cuc 3)$(cuc 7)
    fi
    elif test $layer = e; then
    if is_cw; then
    cube=$(cuc 5)$(cuc 2)$(cuc 1)$(cuc 4)$(cuc 7)$(cuc 6)$(cuc 3)$(cuc 8)
    else
    cube=$(cuc 3)$(cuc 2)$(cuc 7)$(cuc 4)$(cuc 1)$(cuc 6)$(cuc 5)$(cuc 8)
    fi
    elif test $layer = f; then
    if is_cw; then
    cube=$(cuc 1)$(cuc 6)$(cuc 3)$(cuc 2)$(cuc 5)$(cuc 8)$(cuc 7)$(cuc 4)
    else
    cube=$(cuc 1)$(cuc 4)$(cuc 3)$(cuc 8)$(cuc 5)$(cuc 2)$(cuc 7)$(cuc 6)
    fi
    fi

    steps=$(expr $steps + 1)
}

check_state() {
    if test $proj = $answer; then
    over=true
    fi
}

any_key() {
    echo "Continue...\c"
    read
}

welcome() {
    echo "Cube: Match The Projection of The Cube."
    echo "Principle comes from one of the little games in Star Rail."
}

tips() {
    echo "----"
    echo "Tips:"
    echo
    echo "We have a cube consists of 8 blocks:"
    echo "  00   "
    echo " 00 00 "
    echo "   00  "
    any_key
    echo
    echo "We can mark each layer with a character:"
    echo "   a      "
    echo "  b 00    "
    echo "   00 00  "
    echo "  c  00   "
    echo "    d  ef "
    any_key
    echo
    echo "Each layer is:"
    echo "|----------|----------|----------|"
    echo "|   a      |          |          |"
    echo "|    00    |  b       |    00    |"
    echo "|      00  |   00     |   00     |"
    echo "|          |     00   |  c       |"
    echo "|          |          |          |"
    echo "|----------|----------|----------|"
    echo "|          |          |          |"
    echo "|          |    0     |     0    |"
    echo "|      00  |   0  0   |    0  0  |"
    echo "|     00   |     0    |      0   |"
    echo "|    d     |       e  |        f |"
    echo "|----------|----------|----------|"
    any_key
    echo
    echo "We can choose a layer and rotate it either clockwise (cw) or counterclockwise (ccw)."
    echo 'For example, we choose layer `a` and rotate it clockwise, we can input `acw`.'
    echo "   a                 a      "
    echo "  b 10              b 01    "
    echo '   00 00   `acw`     00 00  '
    echo "  c  00   ------->  c  00   "
    echo "    d  ef             d  ef "
    any_key
    echo
    echo "We also have two projections, to the back and right surfaces of the cube:"
    echo "  00            "
    echo " 00  a          "
    echo "    b 00    0   "
    echo "     00 00 0  0 "
    echo "    c  00    0  "
    echo "      d  ef     "
    any_key
    echo
    echo "Our goal is to match the cube with its projection."
    any_key
    echo "----"
    echo
}

case $1 in
-h|-help|--help)
usage
exit
;;
esac

while test $# -gt 0; do
case $1 in
-l|-level)
level=$2
shift
;;
-t|-tips)
show_tips=true
;;
*)
echo "Unknown option: $1"
usage
exit 1
;;
esac
shift
done

welcome
any_key
echo
$show_tips && tips
echo "Game Start."
any_key

set_level
start_time=$(date +%s)
show_board
while ! $over; do
get_input
show_board
check_state
done

echo "Passed."
echo "Steps: $steps"
echo "Time: $(expr $(date +%s) - $start_time)s"
